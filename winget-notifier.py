# -*- coding: utf-8 -*-
import time
import io
import binascii
import threading
import subprocess


import schedule
from pystray import Icon, Menu, MenuItem
from PIL import Image

INTERVAL = 600


class taskTray:
    def __init__(self):
        # スレッド実行モード
        self.running = False
        self.body = str()

        # アイコンの画像をデコード
        self.icon_image = Image.open(io.BytesIO(binascii.unhexlify(ICON.replace('\n', '').strip())))
        self.update_image = Image.open(io.BytesIO(binascii.unhexlify(RED.replace('\n', '').strip())))
        menu = Menu(
            MenuItem('Check', self.doCheck),
            MenuItem('Exit', self.stopApp),
        )
        self.app = Icon(name='PYTHON.win32.winget-notifier', title='winget notifier', icon=self.icon_image, menu=menu)
        self.doCheck()

    def doCheck(self):
        r = subprocess.check_output(['winget', 'upgrade']).decode('utf-8')
        line = r.split()[-1].strip()
        print(line)
        self.app.title = line
        if self.body != line:
            if self.body:
                self.app.icon = self.update_image
            self.body = line
        self.app.update_menu()

    def runSchedule(self):
        schedule.every(INTERVAL).seconds.do(self.doCheck)

        while self.running:
            schedule.run_pending()
            time.sleep(1)

    def stopApp(self):
        self.running = False
        self.app.stop()

    def runApp(self):
        self.running = True

        task_thread = threading.Thread(target=self.runSchedule)
        task_thread.start()

        self.app.run()


ICON = """
89504e470d0a1a0a0000000d4948445200000010000000100804000000b5fa37ea0000000467414d410000b18f0bfc6105000000206348524d00007a
26000080840000fa00000080e8000075300000ea6000003a98000017709cba513c00000002624b474400ff878fccbf000000097048597300000ec400
000ec401952b0e1b0000000774494d4507e80903030a2f7a1e955a0000011c4944415428cf7dd1bd2bc40118c0f1efefd7e572de65f016258a999251
31a863f42f5c64900145646750480c4ad2ed2c321a9488492eb22993337877775fc3a144bec3337d7a7aea418cd8e9b87562a5eb2ed96620dfd9eea2
3766ddb6d51533e64c396bb3e12772ce1735eba9c31e9a5535e79533b6180a9638ef8563d61b5aed90c7663ed1b513c6106bdd74c0988858ed886766
d467a72c402cf7c41777ecb748c4c01a139ebb6ca3a561fe10a2c44992244e31f2489a577a19a529bfe1d8af9edcb4c10553ee39689944f859215d54
72c606b7dc910b7e01c851c134375c32499a3f004811dd541102f9f15f21f0c83ef7ff81776619608bbbbf4024007ce380233a481027202020cd2e0f
bf6e336a9f6b76b96a8fd1fc373f00502bc5393c7cc90e0000002574455874646174653a63726561746500323032342d30392d30325431383a31313a
31342b30393a3030a573a0ae0000002574455874646174653a6d6f6469667900323032342d30392d30325431383a31303a34372b30393a303042e467
d50000000049454e44ae426082
"""

RED = """
89504e470d0a1a0a0000000d4948445200000010000000100803000000282d0f530000000467414d410000b18f0bfc6105000000206348524d00007a
26000080840000fa00000080e8000075300000ea6000003a98000017709cba513c00000135504c5445ff0000000000ff0000ff0000ff0000ff0000ff
0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff
0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff
0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff
0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff
0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ffffff920aaa53000000657452
4e5300000437761b129b9429013391e5fda62896fcfed97f240281f8cf6ac7dc7e250d8cd8721c1869ccde770a1aa24e6cd0f77b0610cdb34d0b1967
d6951f0ef54c0c56da8f30f61e8db90fdb5d2c1441be991140e4d2130587ef3da3ed073bee86499a399844ccf1418900000001624b4744662cd4d925
000000097048597300000ec400000ec401952b0e1b0000000774494d4507e80903030e29f711f56b000000c64944415418d3636060626661656063e7
e0e462600402066e1e5e3e7e0141216111513171a0108384642a9f94b40c5f6aaab0ac9cbc38038382a292b28ab8aa9aba10504843538b81415b4717
4832a8eae90ba51a181a3130189b489a9a9933307059585a59dbd80205d45353ed4ced1d186c1da59c9c5d2002a9a9ae3a6eee221e8e9e0c3081542f
176f1f5fa0bd7001113f11ff80406481a0e0d49050ac0261e111a8020c469151d1480240ef30c4c4eac439f9f1c6c5c78005407e8e49484c4a4e01f2
19016d3e2fbbbc67b1f50000002574455874646174653a63726561746500323032342d30392d30325431383a31343a35322b30393a3030a4c0502a00
00002574455874646174653a6d6f6469667900323032342d30392d30325431383a31343a34312b30393a303028dff2950000000049454e44ae426082
"""

if __name__ == '__main__':
    taskTray().runApp()
